<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wdms">
<select id="selectFileList" resultType="map" parameterType="String">
SELECT cd.server_id, cd.type_id, cd.repo_id, cd.file_id, cd.file_dt, cd.file_count, cd.error_flag, cd.std_count, wsi.server_nm, wti.type_nm, wri.repo_nm, wfi.file_nm, wfi.file_desc, wfi.useyn, wfi.file_attr, wfi.file_path
FROM (
    SELECT 
        id.server_id, 
        CASE 
            WHEN id.server_id = '1' THEN '2' 
            WHEN id.server_id = '2' THEN '1' 
            ELSE id.type_id 
        END AS type_id, 
        id.repo_id, 
        id.file_id, 
        COALESCE(wfd.error_flag, '-') AS error_flag, 
        id.issueDate AS file_dt, 
        COALESCE(wfd.file_count, '-') AS file_count, 
        COALESCE(wfd.std_count, '-') AS std_count
    FROM (
        SELECT 
            wfd.server_id, wfd.type_id, wfd.repo_id, wfd.file_id, DATE_FORMAT(#{boardTime}, '%Y%m%d%H%i') AS issueDate
        FROM wms.wdms_file_data wfd
    ) id
    LEFT JOIN wms.wdms_file_data wfd 
        ON id.server_id = wfd.server_id
        AND id.type_id = wfd.type_id
        AND id.repo_id = wfd.repo_id
        AND id.file_id = wfd.file_id
        AND id.issueDate = wfd.file_dt
) cd
LEFT JOIN wms.wdms_server_info wsi ON cd.server_id = wsi.server_id
LEFT JOIN wms.wdms_type_info wti ON cd.type_id = wti.type_id
LEFT JOIN wms.wdms_repo_info wri ON cd.repo_id = wri.repo_id
LEFT JOIN wms.wdms_file_info wfi ON cd.file_id = wfi.file_id
WHERE wfi.useyn = 'y'
GROUP BY cd.file_id, cd.server_id
ORDER BY cd.file_id, cd.server_id
</select>

<insert id="insertFileCount" parameterType="map">
insert into wms.wdms_file_data (server_id, type_id, repo_id, file_id, file_dt, file_count, error_flag, std_count) values (#{server_id}, #{type_id}, #{repo_id}, #{file_id}, #{boardTime}, #{file_count}, #{error_flag}, #{std_count}) ON DUPLICATE KEY UPDATE server_id = #{server_id}, type_id = #{type_id}, repo_id = #{repo_id}, file_id = #{file_id}, file_dt = #{boardTime}, file_count = #{file_count}, error_flag = case WHEN error_flag = 'y' AND #{error_flag} IN ('y', 'c', 'n') THEN #{error_flag} WHEN error_flag = 'n' AND #{error_flag} IN ('y', 'n') THEN #{error_flag} WHEN error_flag = 'c' AND #{error_flag} IN ('y', 'c') THEN #{error_flag} ELSE error_flag END, std_count = #{std_count}
</insert>

<select id="selectMeRnStnInfo" resultType="map" parameterType="map">
SELECT 
    stn_data.init_dt, stn_data.rfobscd, stn_data.obsnm, stn_data.agcnm, stn_data.addr, stn_data.etcaddr, stn_data.lat, stn_data.lon, stn_data.flag, stn_data.flag_nm, sub.total_count
FROM (
    SELECT 
        mrsi.init_dt, mrsi.rfobscd, mrsi.obsnm, mrsi.agcnm, mrsi.addr, mrsi.etcaddr, mrsi.lat, mrsi.lon, mrsi.flag, msfi.flag_nm
    FROM wms.me_rn_stn_info mrsi
    JOIN wms.me_stn_flag_info msfi
    ON mrsi.flag = msfi.flag
    WHERE init_dt = #{init_dt}
    <if test="agcType != null and agcType != '' and agcType != 'all'"> 
        AND agcnm = #{agcType} 
    </if>
    <if test="endObsCheck == true">
        UNION ALL
        SELECT 
            mrsi.init_dt, mrsi.rfobscd, mrsi.obsnm, mrsi.agcnm, mrsi.addr, mrsi.etcaddr, mrsi.lat, mrsi.lon, mrsi.flag, msfi.flag_nm
        FROM wms.me_rn_stn_info mrsi
	    JOIN wms.me_stn_flag_info msfi
	    ON mrsi.flag = msfi.flag
        WHERE mrsi.flag = 2
        <if test="agcType != null and agcType != '' and agcType != 'all'"> 
            AND agcnm = #{agcType} 
        </if>
        AND NOT EXISTS (
	        SELECT 1 
	        FROM wms.me_rn_stn_info sub_mrsi
	        WHERE sub_mrsi.rfobscd = mrsi.rfobscd
	        AND sub_mrsi.init_dt = #{init_dt}
	    )
    </if>
) AS stn_data
JOIN (
    SELECT COUNT(*) AS total_count FROM (
        SELECT 
            init_dt
        FROM wms.me_rn_stn_info
        WHERE init_dt = #{init_dt}
        <if test="agcType != null and agcType != '' and agcType != 'all'"> 
            AND agcnm = #{agcType} 
        </if>
        <if test="endObsCheck == true">
            UNION ALL
            SELECT 
                init_dt
            FROM wms.me_rn_stn_info
            WHERE flag = 2
            <if test="agcType != null and agcType != '' and agcType != 'all'"> 
                AND agcnm = #{agcType} 
            </if>
            AND NOT EXISTS (
	            SELECT 1 
	            FROM wms.me_rn_stn_info sub_mrsi
	            WHERE sub_mrsi.rfobscd = wms.me_rn_stn_info.rfobscd
	            AND sub_mrsi.init_dt = #{init_dt}
	        )
        </if>
    ) AS count_query
) AS sub
ON 1=1
ORDER BY flag ${stateOrder}, rfobscd ASC
</select>

<select id="selectMeWlStnInfo" resultType="map" parameterType="map">
SELECT 
    stn_data.init_dt, stn_data.wlobscd, stn_data.obsnm, stn_data.agcnm, stn_data.addr, stn_data.etcaddr, stn_data.lat, stn_data.lon, stn_data.gdt, stn_data.attwl, stn_data.wrnwl, stn_data.almwl, stn_data.srswl, stn_data.pfh, stn_data.fstnyn, stn_data.flag, stn_data.flag_nm, sub.total_count
FROM (
    SELECT 
        mwsi.init_dt, mwsi.wlobscd, mwsi.obsnm, mwsi.agcnm, mwsi.addr, mwsi.etcaddr, mwsi.lat, mwsi.lon, mwsi.gdt, mwsi.attwl, mwsi.wrnwl, mwsi.almwl, mwsi.srswl, mwsi.pfh, mwsi.fstnyn, mwsi.flag, msfi.flag_nm
    FROM wms.me_wl_stn_info mwsi
    JOIN wms.me_stn_flag_info msfi
    ON mwsi.flag = msfi.flag
    WHERE init_dt = #{init_dt}
    <if test="agcType != null and agcType != '' and agcType != 'all'"> 
        AND agcnm = #{agcType} 
    </if>
    <if test="endObsCheck == true">
        UNION ALL
        SELECT 
            mwsi.init_dt, mwsi.wlobscd, mwsi.obsnm, mwsi.agcnm, mwsi.addr, mwsi.etcaddr, mwsi.lat, mwsi.lon, mwsi.gdt, mwsi.attwl, mwsi.wrnwl, mwsi.almwl, mwsi.srswl, mwsi.pfh, mwsi.fstnyn, mwsi.flag, msfi.flag_nm
        FROM wms.me_wl_stn_info mwsi
	    JOIN wms.me_stn_flag_info msfi
	    ON mwsi.flag = msfi.flag
        WHERE mwsi.flag = 2
        <if test="agcType != null and agcType != '' and agcType != 'all'"> 
            AND agcnm = #{agcType} 
        </if>
        AND NOT EXISTS (
	        SELECT 1 
	        FROM wms.me_wl_stn_info sub_mwsi
	        WHERE sub_mwsi.wlobscd = mwsi.wlobscd
	        AND sub_mwsi.init_dt = #{init_dt}
	    )
    </if>
) AS stn_data
JOIN (
    SELECT COUNT(*) AS total_count FROM (
        SELECT 
            init_dt
        FROM wms.me_wl_stn_info
        WHERE init_dt = #{init_dt}
        <if test="agcType != null and agcType != '' and agcType != 'all'"> 
            AND agcnm = #{agcType} 
        </if>
        <if test="endObsCheck == true">
            UNION ALL
            SELECT 
                init_dt
            FROM wms.me_wl_stn_info
            WHERE flag = 2
            <if test="agcType != null and agcType != '' and agcType != 'all'"> 
                AND agcnm = #{agcType} 
            </if>
            AND NOT EXISTS (
	            SELECT 1 
	            FROM wms.me_wl_stn_info sub_mwsi
	            WHERE sub_mwsi.wlobscd = wms.me_wl_stn_info.wlobscd
	            AND sub_mwsi.init_dt = #{init_dt}
	        )
        </if>
    ) AS count_query
) AS sub
ON 1=1
ORDER BY flag ${stateOrder}, wlobscd ASC
</select>

<select id="selectMeDamStnInfo" resultType="map" parameterType="map">
SELECT 
   stn_data.init_dt, stn_data.dmobscd, stn_data.obsnm, stn_data.agcnm, stn_data.addr, stn_data.etcaddr, stn_data.lat, stn_data.lon, stn_data.fldlmtwl, stn_data.pfh, stn_data.flag, stn_data.flag_nm, sub.total_count
FROM (
    SELECT 
        mdsi.init_dt, mdsi.dmobscd, mdsi.obsnm, mdsi.agcnm, mdsi.addr, mdsi.etcaddr, mdsi.lat, mdsi.lon, mdsi.fldlmtwl, mdsi.pfh, mdsi.flag, msfi.flag_nm
    FROM wms.me_dam_stn_info mdsi
    JOIN wms.me_stn_flag_info msfi
    ON mdsi.flag = msfi.flag
    WHERE init_dt = #{init_dt}
    <if test="agcType != null and agcType != '' and agcType != 'all'"> 
        AND agcnm = #{agcType} 
    </if>
    <if test="endObsCheck == true">
        UNION ALL
        SELECT 
            mdsi.init_dt, mdsi.dmobscd, mdsi.obsnm, mdsi.agcnm, mdsi.addr, mdsi.etcaddr, mdsi.lat, mdsi.lon, mdsi.fldlmtwl, mdsi.pfh, mdsi.flag, msfi.flag_nm
        FROM wms.me_dam_stn_info mdsi
	    JOIN wms.me_stn_flag_info msfi
	    ON mdsi.flag = msfi.flag
        WHERE mdsi.flag = 2
        <if test="agcType != null and agcType != '' and agcType != 'all'"> 
            AND agcnm = #{agcType} 
        </if>
        AND NOT EXISTS (
	        SELECT 1 
	        FROM wms.me_dam_stn_info sub_mdsi
	        WHERE sub_mdsi.dmobscd = mdsi.dmobscd
	        AND sub_mdsi.init_dt = #{init_dt}
	    )
    </if>
) AS stn_data
JOIN (
    SELECT COUNT(*) AS total_count FROM (
        SELECT 
            init_dt
        FROM wms.me_dam_stn_info
        WHERE init_dt = #{init_dt}
        <if test="agcType != null and agcType != '' and agcType != 'all'"> 
            AND agcnm = #{agcType} 
        </if>
        <if test="endObsCheck == true">
            UNION ALL
            SELECT 
                init_dt
            FROM wms.me_dam_stn_info
            WHERE flag = 2
            <if test="agcType != null and agcType != '' and agcType != 'all'"> 
                AND agcnm = #{agcType} 
            </if>
            AND NOT EXISTS (
	            SELECT 1 
	            FROM wms.me_dam_stn_info sub_mdsi
	            WHERE sub_mdsi.dmobscd = wms.me_dam_stn_info.dmobscd
	            AND sub_mdsi.init_dt = #{init_dt}
	        )
        </if>
    ) AS count_query
) AS sub
ON 1=1
ORDER BY flag ${stateOrder}, dmobscd ASC
</select>

<update id="updateMeRnStnInfoFlag" parameterType="map">
UPDATE wms.me_rn_stn_info c LEFT JOIN wms.me_rn_stn_info p ON c.rfobscd = p.rfobscd AND p.init_dt = #{yesterday} SET c.flag = CASE WHEN p.rfobscd IS NULL THEN '1' WHEN c.obsnm != p.obsnm THEN '3' WHEN c.agcnm != p.agcnm THEN '4' WHEN c.addr != p.addr OR c.etcaddr != p.etcaddr THEN '5' WHEN c.lat != p.lat OR c.lon != p.lon THEN '6' ELSE c.flag END WHERE c.init_dt = #{today} OR (c.rfobscd IS NULL AND c.init_dt = #{yesterday})
</update>

<update id="updateMeRnStnInfoDelFlag" parameterType="map">
UPDATE wms.me_rn_stn_info p LEFT JOIN wms.me_rn_stn_info c ON p.rfobscd = c.rfobscd AND c.init_dt = #{today} SET p.flag = '2' WHERE p.init_dt = #{yesterday} AND c.rfobscd IS NULL
</update>

<update id="updateMeWlStnInfoFlag" parameterType="map">
UPDATE wms.me_wl_stn_info c LEFT JOIN wms.me_wl_stn_info p ON c.wlobscd = p.wlobscd AND p.init_dt = #{yesterday} SET c.flag = CASE WHEN p.wlobscd IS NULL THEN '1' WHEN c.obsnm != p.obsnm THEN '3' WHEN c.agcnm != p.agcnm THEN '4' WHEN c.addr != p.addr OR c.etcaddr != p.etcaddr THEN '5' WHEN c.lat != p.lat OR c.lon != p.lon THEN '6' WHEN c.gdt != p.gdt THEN '7' WHEN c.attwl != p.attwl THEN '8' WHEN c.wrnwl != p.wrnwl THEN '9' WHEN c.almwl != p.almwl THEN '10' WHEN c.srswl != p.srswl THEN '11' WHEN c.pfh != p.pfh THEN '12' WHEN c.fstnyn != p.fstnyn THEN '13' ELSE c.flag END WHERE c.init_dt = #{today} OR (c.wlobscd IS NULL AND c.init_dt = #{yesterday})
</update>

<update id="updateMeWlStnInfoDelFlag" parameterType="map">
UPDATE wms.me_wl_stn_info p LEFT JOIN wms.me_wl_stn_info c ON p.wlobscd = c.wlobscd AND c.init_dt = #{today} SET p.flag = '2' WHERE p.init_dt = #{yesterday} AND c.wlobscd IS NULL
</update>

<update id="updateMeDamStnInfoFlag" parameterType="map">
UPDATE wms.me_dam_stn_info c LEFT JOIN wms.me_dam_stn_info p ON c.dmobscd = p.dmobscd AND p.init_dt = #{yesterday} SET c.flag =  CASE WHEN p.dmobscd IS NULL THEN '1' WHEN c.obsnm != p.obsnm THEN '3' WHEN c.agcnm != p.agcnm THEN '4' WHEN c.addr != p.addr OR c.etcaddr != p.etcaddr THEN '5' WHEN c.lat != p.lat OR c.lon != p.lon THEN '6' WHEN c.fldlmtwl != p.fldlmtwl THEN '14' WHEN c.pfh != p.pfh THEN '12' ELSE c.flag END WHERE c.init_dt = #{today} OR (c.dmobscd IS NULL AND c.init_dt = #{yesterday})
</update>

<update id="updateMeDamStnInfoDelFlag" parameterType="map">
UPDATE wms.me_dam_stn_info p LEFT JOIN wms.me_dam_stn_info c ON p.dmobscd = c.dmobscd AND c.init_dt = #{today} SET p.flag = '2' WHERE p.init_dt = #{yesterday}  AND c.dmobscd IS NULL
</update>

<update id="updateCorrectionData">
    <foreach collection="correctionData" item="item" separator=";">
        UPDATE wms.wdms_file_data
        SET file_count = #{item.updateValue},
        	error_flag = 'c' 
        WHERE file_id = #{item.fileId}
        AND file_dt = #{item.issuedate}
        AND repo_id = #{item.repoId}
    </foreach>
</update>

<select id="selectMetroStatus" resultType="map">
SELECT wmi.info_id, wmi.type_id, wti.type_nm , wmi.file_id, wfi.file_nm, wfi.file_desc, wmi.file_start_year, wmi.file_end_year, wmi.db_start_year, wmi.db_end_year, wmi.ins_date_check, wmi.ins_size_check, wmi.ins_val_check, wmi.last_update, wmi.file_ord, wmi.msg, wmi.data_source FROM wms.wdms_metro_info wmi JOIN wms.wdms_file_info wfi on wmi.file_id = wfi.file_id JOIN wms.wdms_type_info wti ON wmi.type_id = wti.type_id order by file_ord
</select>

<update id="updateMetroStatus" parameterType="map">
update wms.wdms_metro_info set file_start_year = #{file_start_year}, file_end_year = #{file_end_year}, db_start_year = #{db_start_year}, db_end_year = #{db_end_year}, ins_date_check = #{ins_date_check}, ins_size_check = #{ins_size_check}, ins_val_check = #{ins_val_check}, last_update = #{last_update}, msg = #{msg} where type_id = #{type_id} and file_id = #{file_id}
</update>
</mapper>
  